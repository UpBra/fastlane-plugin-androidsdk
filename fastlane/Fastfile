class Emulator
	attr_accessor :name, :device, :api, :platform

	def initialize(device: 'pixel', api: 'android-32', platform: 'google_apis')
		@name = [device, api, platform].join('_').gsub(' ', '_')
		@device = device
		@api = api
		@platform = platform
	end
end

lane :test do
	emulator = Emulator.new(device: 'pixel', api: 'android-32')

	sdkmanager_find(api: emulator.api, platform: emulator.platform)
	sdkmanager_install(package_path: lane_context[SharedValues::SDKMANAGER_FIND_FIRST_PATH])

	avdmanager_create(
		name: emulator.name,
		package: lane_context[SharedValues::SDKMANAGER_FIND_FIRST_PATH],
		device: emulator.device,
		size: '4096M'
	)
	avdmanager_delete()


# 	avdmanager_create(
# 		name: 'TEST',
# 		package: 'system-images;android-32;google_apis;arm64-v8a',
# 		device: 'pixel_5',
# 		size: '4096M',
# 	)
#
# 	avdmanager_delete()
#
# 	avdmanager_execute(
# 		name: 'TEST',
# 		package: 'system-images;android-32;google_apis;arm64-v8a',
# 		device: 'pixel_5',
# 		size: '4096M',
# 		block: ->(name) {
# 			UI.message "Executing stuff with #{name} running..."
# 		}
# 	)
end
